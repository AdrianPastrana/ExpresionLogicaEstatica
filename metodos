package expresion;

public class metodos {

    private boolean p[] = {true, true, false, false};
    private boolean q[] = {true, false, true, false};
    private boolean resultado[] = {};

    public metodos() {
        resultado = new boolean[4];
    }

    public void expresion() {
        System.out.println("( p -> q )");
        resultado = tablasV(3, p, q);
        System.out.println("( p -> q ) ^ p");
        resultado = tablasV(1, resultado, p);
        System.out.println("[ ( p -> q ) ^ p ] -> q");
        resultado = tablasV(3, resultado, q);
        resultado(resultado);
    }

    private boolean[] tablasV(int tabla, boolean p[], boolean q[]) {
        boolean resul[] = new boolean[4];

        switch (tabla) {
            case 0: //not
                for (int i = 0; i < p.length; i++) {
                    if (p[i] == true) {
                        resul[i] = false;
                    } else {
                        resul[i] = true;
                    }
                }
                break;
            case 1: //and
                for (int i = 0; i < resul.length; i++) {
                    if (p[i] == true && q[i] == true) {
                        resul[i] = true;
                    } else if (p[i] == true && q[i] == false) {
                        resul[i] = false;
                    } else if (p[i] == false && q[i] == true) {
                        resul[i] = false;
                    } else if (p[i] == false && q[i] == false) {
                        resul[i] = false;
                    }
                }
                break;
            case 2: //or
                for (int i = 0; i < resul.length; i++) {
                    if (p[i] == true && q[i] == true) {
                        resul[i] = true;
                    } else if (p[i] == true && q[i] == false) {
                        resul[i] = true;
                    } else if (p[i] == false && q[i] == true) {
                        resul[i] = true;
                    } else if (p[i] == false && q[i] == false) {
                        resul[i] = false;
                    }
                }
                break;
            case 3: //condicional
                for (int i = 0; i < resul.length; i++) {
                    if (p[i] == true && q[i] == true) {
                        resul[i] = true;
                    } else if (p[i] == true && q[i] == false) {
                        resul[i] = false;
                    } else if (p[i] == false && q[i] == true) {
                        resul[i] = true;
                    } else if (p[i] == false && q[i] == false) {
                        resul[i] = true;
                    }
                }
                break;
            case 4: //bicondicional
                for (int i = 0; i < resul.length; i++) {
                    if (p[i] == true && q[i] == true) {
                        resul[i] = true;
                    } else if (p[i] == true && q[i] == false) {
                        resul[i] = false;
                    } else if (p[i] == false && q[i] == true) {
                        resul[i] = false;
                    } else if (p[i] == false && q[i] == false) {
                        resul[i] = true;
                    }
                }
                break;
        }

        for (int i = 0; i < resul.length; i++) {
            System.out.println(resul[i]);
        }
        return resul;
    }

    // tautologia all true
    //contigencia t && f
    //contradiccion all false
    private void resultado(boolean[] resultado) {
        String aux = "";
        for (int i = 0; i < resultado.length; i++) {
            if (resultado[i] == true) {
                aux += "1";
            } else {
                aux += "0";
            }
        }

        if (aux.equalsIgnoreCase("1111")) {
            System.out.println("ES UNA TAUTOLOGIA");
        } else if (aux.equalsIgnoreCase("0000")) {
            System.out.println("ES UNA CONTRADICCION");
        } else {
            System.out.println("ES UNA CONTINGENCIA");
        }
    }
}
